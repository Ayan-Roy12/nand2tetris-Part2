// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/HalfAdder.hdl

/**
 * Computes the sum of two bits.
 */

CHIP HalfAdder {
    IN a, b;    // 1-bit inputs
    OUT sum,    // Right bit of a + b 
        carry;  // Left bit of a + b

    PARTS:
    // Put you code here:
    //
    //simplest = elegant  
/**
    Xor(a=a,b=b,out=sum);
    And(a=a,b=b,out=carry);
*/

    //least gates, where #gates = #nand gates
    //for instance, Not gate has 1 nand gate
    //and, And gate contains 2 nand gates
    //THANKS AND KUDOS TO Tatiana FOR THE XOR SOLUTION IN CHAPTER 1

    Nand(a=a, b=b, out=NotAnd);   
    Or(a=a, b=b, out=OrIn);
    
    And(a=OrIn, b=NotAnd, out=sum);
    Not(in=NotAnd, out=carry);


    //fastest,  best design is where
    //the slowest route from in to out
    //is faster than any other design
    //fastest = least number of nand gates in the path
    /**     
    Not(in=a, out=na);
    Not(in=b, out=nb);
    Nand(a=a, b=nb,out=anb);
    Nand(a=na,b=b, out=bna);
    Nand(a=anb,b=bna,out=sum);

    And(a=a,b=b,out=carry);
    */      
}